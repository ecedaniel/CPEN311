/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 20000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wr_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("addr_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addr_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("finish")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wr_data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wr_data_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_data_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wr_data_out";
}

SIGNAL("wr_start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("init_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("init_counter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("init_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "init_counter";
}

SIGNAL("state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("busy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 999;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("wr_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("addr_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5140.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 4580.0;
	}
}

TRANSITION_LIST("addr_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2580.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2600.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2020.0;
	}
}

TRANSITION_LIST("addr_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1320.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 740.0;
	}
}

TRANSITION_LIST("addr_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 660.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("addr_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("addr_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 30;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("addr_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 60;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("addr_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 121;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("finish")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9720.0;
	}
}

TRANSITION_LIST("wr_data_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5140.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 4580.0;
	}
}

TRANSITION_LIST("wr_data_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2580.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2600.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2020.0;
	}
}

TRANSITION_LIST("wr_data_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1320.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 740.0;
	}
}

TRANSITION_LIST("wr_data_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 660.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("wr_data_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("wr_data_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 30;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("wr_data_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 60;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("wr_data_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 121;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("wr_start")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 256;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 242;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("init_counter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5140.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 4580.0;
	}
}

TRANSITION_LIST("init_counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2580.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2600.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2020.0;
	}
}

TRANSITION_LIST("init_counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1320.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 740.0;
	}
}

TRANSITION_LIST("init_counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 660.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("init_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("init_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 30;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("init_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 60;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("init_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 121;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("state[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("state[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9720.0;
	}
}

TRANSITION_LIST("state[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 242;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
	}
}

TRANSITION_LIST("state[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 256;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 242;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9720.0;
	}
}

TRANSITION_LIST("state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 9700.0;
	}
}

TRANSITION_LIST("busy")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 9700.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wr_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "finish";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_data_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "wr_start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "init_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "state[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "busy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
